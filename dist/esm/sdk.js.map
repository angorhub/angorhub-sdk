{"version":3,"file":"sdk.js","sources":["../../src/sdk.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { NostrService } from './nostr-service';\r\nimport type {\r\n  AngorProject,\r\n  AngorProjectDetails,\r\n  AngorProjectStats,\r\n  AngorInvestment\r\n} from './interfaces';\r\n\r\ninterface Indexer {\r\n  url: string;\r\n  isPrimary: boolean;\r\n}\r\n\r\ninterface SDKConfig {\r\n  timeout?: number;\r\n  useRemoteConfig?: boolean;\r\n  customIndexerUrl?: string;\r\n  enableNostr?: boolean;\r\n  nostrRelays?: string[];\r\n}\r\n\r\nexport class AngorHubSDK {\r\n  private network: 'mainnet' | 'testnet';\r\n  private config: SDKConfig;\r\n  private indexers: Indexer[];\r\n  private currentIndexer: Indexer;\r\n  private nostrService?: NostrService;\r\n\r\n  private networks = {\r\n    mainnet: [\r\n      { url: 'https://fulcrum.angor.online/', isPrimary: true },\r\n      { url: 'https://indexer.angor.io/', isPrimary: false },\r\n      { url: 'https://electrs.angor.online/', isPrimary: false }\r\n    ],\r\n    testnet: [\r\n      { url: 'https://test.indexer.angor.io/', isPrimary: true },\r\n      { url: 'https://signet.angor.online/', isPrimary: false }\r\n    ]\r\n  };\r\n\r\n  constructor(network: 'mainnet' | 'testnet' = 'mainnet', config: SDKConfig = {}) {\r\n    this.network = network;\r\n    this.config = {\r\n      timeout: config.timeout || 8000,\r\n      useRemoteConfig: config.useRemoteConfig !== false,\r\n      customIndexerUrl: config.customIndexerUrl,\r\n      enableNostr: config.enableNostr !== false, // Default to true\r\n      nostrRelays: config.nostrRelays,\r\n    };\r\n\r\n    if (this.config.customIndexerUrl) {\r\n      this.indexers = [{ url: this.config.customIndexerUrl, isPrimary: true }];\r\n    } else {\r\n      this.indexers = this.networks[network];\r\n    }\r\n\r\n    this.currentIndexer = this.indexers.find(i => i.isPrimary) || this.indexers[0];\r\n\r\n    // Initialize Nostr service if enabled\r\n    if (this.config.enableNostr) {\r\n      this.nostrService = new NostrService(this.config.nostrRelays);\r\n    }\r\n  }\r\n\r\n  private async makeRequest<T>(endpoint: string, params: Record<string, any> = {}): Promise<T> {\r\n    for (const indexer of this.indexers) {\r\n      try {\r\n        const response = await axios.get<T>(`${indexer.url}api/query/Angor/${endpoint}`, {\r\n          params,\r\n          timeout: this.config.timeout\r\n        });\r\n        this.currentIndexer = indexer;\r\n        return response.data;\r\n      } catch (_) {}\r\n    }\r\n    throw new Error('All indexers failed');\r\n  }\r\n\r\n  async getProjects(limit = 10, offset = 0): Promise<AngorProject[]> {\r\n    const projects = await this.makeRequest<AngorProject[]>('projects', { limit, offset });\r\n    \r\n    // Enhance with Nostr data if service is available\r\n    if (this.nostrService) {\r\n      return await this.nostrService.enrichProjectsWithNostrData(projects);\r\n    }\r\n    \r\n    return projects;\r\n  }\r\n\r\n  async getProject(projectId: string): Promise<AngorProjectDetails> {\r\n    const project = await this.makeRequest<AngorProjectDetails>(`projects/${projectId}`);\r\n    \r\n    // Enhance with Nostr data if service is available\r\n    if (this.nostrService) {\r\n      return await this.nostrService.enrichProjectWithNostrData(project);\r\n    }\r\n    \r\n    return project;\r\n  }\r\n\r\n  async getProjectStats(projectId: string): Promise<AngorProjectStats> {\r\n    return await this.makeRequest(`projects/${projectId}/stats`);\r\n  }\r\n\r\n  async getProjectInvestments(projectId: string, limit = 10, offset = 0): Promise<AngorInvestment[]> {\r\n    return await this.makeRequest(`projects/${projectId}/investments`, { limit, offset });\r\n  }\r\n\r\n  async getInvestorInvestment(projectId: string, investorPublicKey: string): Promise<AngorInvestment> {\r\n    return await this.makeRequest(`projects/${projectId}/investments/${investorPublicKey}`);\r\n  }\r\n\r\n  getConfigInfo() {\r\n    return {\r\n      network: this.network,\r\n      currentIndexer: this.currentIndexer,\r\n      availableIndexers: this.indexers,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;MAsBa,WAAW,CAAA;AAmBtB,IAAA,WAAA,CAAY,OAAA,GAAiC,SAAS,EAAE,MAAA,GAAoB,EAAE,EAAA;AAZtE,QAAA,IAAA,CAAA,QAAQ,GAAG;AACjB,YAAA,OAAO,EAAE;AACP,gBAAA,EAAE,GAAG,EAAE,+BAA+B,EAAE,SAAS,EAAE,IAAI,EAAE;AACzD,gBAAA,EAAE,GAAG,EAAE,2BAA2B,EAAE,SAAS,EAAE,KAAK,EAAE;AACtD,gBAAA,EAAE,GAAG,EAAE,+BAA+B,EAAE,SAAS,EAAE,KAAK;AACzD,aAAA;AACD,YAAA,OAAO,EAAE;AACP,gBAAA,EAAE,GAAG,EAAE,gCAAgC,EAAE,SAAS,EAAE,IAAI,EAAE;AAC1D,gBAAA,EAAE,GAAG,EAAE,8BAA8B,EAAE,SAAS,EAAE,KAAK;AACxD;SACF;AAGC,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO;QACtB,IAAI,CAAC,MAAM,GAAG;AACZ,YAAA,OAAO,EAAE,MAAM,CAAC,OAAO,IAAI,IAAI;AAC/B,YAAA,eAAe,EAAE,MAAM,CAAC,eAAe,KAAK,KAAK;YACjD,gBAAgB,EAAE,MAAM,CAAC,gBAAgB;AACzC,YAAA,WAAW,EAAE,MAAM,CAAC,WAAW,KAAK,KAAK;YACzC,WAAW,EAAE,MAAM,CAAC,WAAW;SAChC;AAED,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;AAChC,YAAA,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;QAC1E;aAAO;YACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QACxC;QAEA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;AAG9E,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;AAC3B,YAAA,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;QAC/D;IACF;AAEQ,IAAA,MAAM,WAAW,CAAI,QAAgB,EAAE,SAA8B,EAAE,EAAA;AAC7E,QAAA,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;AACnC,YAAA,IAAI;AACF,gBAAA,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAI,CAAA,EAAG,OAAO,CAAC,GAAG,CAAA,gBAAA,EAAmB,QAAQ,EAAE,EAAE;oBAC/E,MAAM;AACN,oBAAA,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC;AACtB,iBAAA,CAAC;AACF,gBAAA,IAAI,CAAC,cAAc,GAAG,OAAO;gBAC7B,OAAO,QAAQ,CAAC,IAAI;YACtB;AAAE,YAAA,OAAO,CAAC,EAAE,EAAC;QACf;AACA,QAAA,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC;IACxC;IAEA,MAAM,WAAW,CAAC,KAAK,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,EAAA;AACtC,QAAA,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,CAAiB,UAAU,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;;AAGtF,QAAA,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,2BAA2B,CAAC,QAAQ,CAAC;QACtE;AAEA,QAAA,OAAO,QAAQ;IACjB;IAEA,MAAM,UAAU,CAAC,SAAiB,EAAA;QAChC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,WAAW,CAAsB,CAAA,SAAA,EAAY,SAAS,CAAA,CAAE,CAAC;;AAGpF,QAAA,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,0BAA0B,CAAC,OAAO,CAAC;QACpE;AAEA,QAAA,OAAO,OAAO;IAChB;IAEA,MAAM,eAAe,CAAC,SAAiB,EAAA;QACrC,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,CAAA,SAAA,EAAY,SAAS,CAAA,MAAA,CAAQ,CAAC;IAC9D;IAEA,MAAM,qBAAqB,CAAC,SAAiB,EAAE,KAAK,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,EAAA;AACnE,QAAA,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,CAAA,SAAA,EAAY,SAAS,CAAA,YAAA,CAAc,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;IACvF;AAEA,IAAA,MAAM,qBAAqB,CAAC,SAAiB,EAAE,iBAAyB,EAAA;QACtE,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,CAAA,SAAA,EAAY,SAAS,CAAA,aAAA,EAAgB,iBAAiB,CAAA,CAAE,CAAC;IACzF;IAEA,aAAa,GAAA;QACX,OAAO;YACL,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,iBAAiB,EAAE,IAAI,CAAC,QAAQ;AAChC,YAAA,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW;SAClC;IACH;AACD;;;;"}