{"version":3,"file":"nostr-service.js","sources":["../../src/nostr-service.ts"],"sourcesContent":["import NDK, { NDKEvent, NDKFilter } from '@nostr-dev-kit/ndk';\r\nimport type { ProjectInfo, NostrProfileMetadata } from './interfaces';\r\n\r\nexport class NostrService {\r\n  private ndk: NDK;\r\n  private isInitialized: boolean = false;\r\n\r\n  constructor(relays: string[] = [\r\n    \"wss://relay.damus.io\",\r\n    \"wss://relay.primal.net\",\r\n    \"wss://nos.lol\",\r\n    \"wss://relay.angor.io\",\r\n    \"wss://relay2.angor.io\"\r\n  ]) {\r\n    this.ndk = new NDK({\r\n      explicitRelayUrls: relays,\r\n    });\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n    if (this.isInitialized) return;\r\n    \r\n    try {\r\n      await this.ndk.connect();\r\n      this.isInitialized = true;\r\n    } catch (error) {\r\n      console.error('Failed to initialize Nostr service:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getProjectInfo(nostrEventId: string): Promise<ProjectInfo | null> {\r\n    try {\r\n      await this.initialize();\r\n\r\n      // Fetch project info events (kinds 3030, 30078)\r\n      const filter: NDKFilter = {\r\n        ids: [nostrEventId],\r\n        kinds: [3030 as any, 30078 as any],\r\n        limit: 1\r\n      };\r\n\r\n      const events = await this.ndk.fetchEvents(filter);\r\n      \r\n      if (events.size === 0) {\r\n        console.warn(`No project info found for event ID: ${nostrEventId}`);\r\n        return null;\r\n      }\r\n\r\n      const event = Array.from(events)[0];\r\n      \r\n      try {\r\n        const projectInfo = JSON.parse(event.content) as ProjectInfo;\r\n        return projectInfo;\r\n      } catch (parseError) {\r\n        console.error('Failed to parse project info:', parseError);\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching project info:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async getProfileMetadata(nostrPubKey: string): Promise<NostrProfileMetadata | null> {\r\n    try {\r\n      await this.initialize();\r\n\r\n      // Fetch user profile metadata (kind 0)\r\n      const filter: NDKFilter = {\r\n        authors: [nostrPubKey],\r\n        kinds: [0],\r\n        limit: 1\r\n      };\r\n\r\n      const events = await this.ndk.fetchEvents(filter);\r\n      \r\n      if (events.size === 0) {\r\n        console.warn(`No profile metadata found for pubkey: ${nostrPubKey}`);\r\n        return null;\r\n      }\r\n\r\n      const event = Array.from(events)[0];\r\n      \r\n      try {\r\n        const metadata = JSON.parse(event.content) as NostrProfileMetadata;\r\n        return metadata;\r\n      } catch (parseError) {\r\n        console.error('Failed to parse profile metadata:', parseError);\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching profile metadata:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async enrichProjectWithNostrData(project: any): Promise<any> {\r\n    if (!project.nostrEventId) {\r\n      return project;\r\n    }\r\n\r\n    // Get project info from Nostr\r\n    const projectInfo = await this.getProjectInfo(project.nostrEventId);\r\n    \r\n    let metadata: NostrProfileMetadata | null = null;\r\n    \r\n    // If we have project info and nostrPubKey, get profile metadata\r\n    if (projectInfo && projectInfo.nostrPubKey) {\r\n      metadata = await this.getProfileMetadata(projectInfo.nostrPubKey);\r\n    }\r\n\r\n    return {\r\n      ...project,\r\n      projectInfo,\r\n      metadata\r\n    };\r\n  }\r\n\r\n  async enrichProjectsWithNostrData(projects: any[]): Promise<any[]> {\r\n    const enrichedProjects = await Promise.all(\r\n      projects.map(project => this.enrichProjectWithNostrData(project))\r\n    );\r\n    \r\n    return enrichedProjects;\r\n  }\r\n\r\n  disconnect(): void {\r\n    if (this.isInitialized) {\r\n      // NDK doesn't have explicit disconnect, but we can clean up\r\n      this.isInitialized = false;\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}